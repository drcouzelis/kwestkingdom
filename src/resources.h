#ifndef RESOURCES_HEADER
#define RESOURCES_HEADER


#include <allegro.h>


enum
{
  IMG_SWORD_STAB_2 = 0,
  IMG_SWORD_STAB_4,
  IMG_SWORD_STAB_3,
  IMG_SWORD_STAB_1,
  IMG_SWORD_HOLD_2,
  IMG_SWORD_HOLD_4,
  IMG_SWORD_HOLD_3,
  IMG_SWORD_HOLD_1,
  IMG_SHIELD_2,
  IMG_SHIELD_4,
  IMG_SHIELD_3,
  IMG_SHIELD_1,
  IMG_TITLE,
  IMG_CHOMPER_BITE_2,
  IMG_CHOMPER_BITE_4,
  IMG_CHOMPER_BITE_5,
  IMG_CHOMPER_BITE_3,
  IMG_CHOMPER_BITE_1,
  IMG_CHOMPER_STAND_2,
  IMG_CHOMPER_STAND_3,
  IMG_CHOMPER_STAND_1,
  IMG_HERO_HURT_2,
  IMG_HERO_HURT_4,
  IMG_HERO_HURT_3,
  IMG_HERO_HURT_1,
  IMG_HERO_DIE_2,
  IMG_HERO_DIE_4,
  IMG_HERO_DIE_5,
  IMG_HERO_DIE_3,
  IMG_HERO_DIE_1,
  IMG_HERO_ATTACK_2,
  IMG_HERO_ATTACK_4,
  IMG_HERO_ATTACK_3,
  IMG_HERO_ATTACK_1,
  IMG_HERO_STAND_2,
  IMG_HERO_STAND_3,
  IMG_HERO_STAND_1,
  IMG_ARCHER_2,
  IMG_ARCHER_3,
  IMG_ARCHER_1,
  IMG_ITEMS_EMPTYHEART,
  IMG_ITEMS_HEART,
  IMG_ITEMS_MONEYBAG,
  IMG_TERRAIN_DOWNSTAIRS,
  IMG_TERRAIN_WATER,
  IMG_TERRAIN_DIRT,
  IMG_TERRAIN_ICE,
  IMG_TERRAIN_PATH,
  IMG_TERRAIN_SPIRE,
  IMG_TERRAIN_OAK,
  IMG_TERRAIN_UPSTAIRS,
  IMG_TERRAIN_SNOW,
  IMG_TERRAIN_EVERGREEN,
  IMG_TERRAIN_GRASS,
  IMG_HAMMER_SWING_2,
  IMG_HAMMER_SWING_4,
  IMG_HAMMER_SWING_3,
  IMG_HAMMER_SWING_1,
  IMG_HAMMER_HOLD_2,
  IMG_HAMMER_HOLD_4,
  IMG_HAMMER_HOLD_3,
  IMG_HAMMER_HOLD_1,
  IMG_BOW_DRAW_2,
  IMG_BOW_DRAW_3,
  IMG_BOW_DRAW_1,
  IMG_BOW_HOLD_2,
  IMG_BOW_HOLD_4,
  IMG_BOW_HOLD_3,
  IMG_BOW_HOLD_1,
  IMG_GIANT_2,
  IMG_GIANT_3,
  IMG_GIANT_1,
  IMG_ARROW,
  IMG_SHORE_SNOW_INSIDECORNER,
  IMG_SHORE_SNOW_OUTSIDECORNER,
  IMG_SHORE_SNOW_SHORE,
  IMG_SHORE_GRASS_INSIDECORNER,
  IMG_SHORE_GRASS_OUTSIDECORNER,
  IMG_SHORE_GRASS_SHORE,
  IMG_HELP,
  IMG_GAMEOVER,
  IMG_PALETTE,
  IMG_NINJA_2,
  IMG_NINJA_3,
  IMG_NINJA_1,
  NUM_IMAGES
};


enum
{
  SND_MONEY = 0,
  SND_ARROW_HIT,
  SND_ARROW_FLY,
  SND_HEART,
  SND_GASP,
  SND_SWORD,
  SND_HAMMER,
  SND_CHOMP,
  NUM_SOUNDS
};


enum
{
  NORMAL = 0,
  H_FLIP,
  V_FLIP,
  H_V_FLIP,
  ROTATE,
  ROTATE_H_FLIP,
  ROTATE_V_FLIP,
  ROTATE_H_V_FLIP,
  NUM_IMAGE_FORMATS
};


/**
 * Pre-load the resources.
 * This may take some time, but is better than
 * "pauses" in the game to load them on the fly.
 */
void init_resources();
void stop_resources();

BITMAP *get_image(int image, int format);
SAMPLE *get_sound(int sound);

/**
 * It only makes sense to do this after you have
 * initialized the resources.
 */
PALETTE *get_color_palette();


#endif
